DROP TABLE IF EXISTS jdickinson1.ev_av_2020_step_01;
CREATE TABLE jdickinson1.ev_av_2020_step_01 AS
SELECT
	b.state_code
	, b.myv_van_id
	, b.date_voted
	, b.voting_method
	, b.date_request_received
	, b.date_ballot_mailed
	, CASE
		WHEN b.date_request_received IS NOT NULL AND b.date_ballot_mailed IS NULL AND b.date_voted IS NULL THEN 'Ballot Request Received'
		WHEN b.date_ballot_mailed IS NOT NULL AND b.date_voted IS NULL THEN 'Ballot Mailed'
		WHEN (b.date_request_received IS NOT NULL OR b.date_ballot_mailed IS NOT NULL) AND b.date_voted IS NOT NULL THEN 'Mail Ballot Cast (by Mail or in Person)'
		ELSE NULL
		END AS mail_ballot_status
FROM
(
SELECT
	a.*
	, ROW_NUMBER() OVER (PARTITION BY a.state_code || a.myv_van_id ORDER BY a.datetime_modified DESC) AS rank
FROM
(
SELECT DISTINCT
	ca.state_code
	, ca.myv_van_id
	, CASE WHEN ca.date_ballot_received IS NULL
			AND ca.date_early_voted IS NULL
			THEN NULL
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NULL
			THEN ca.date_ballot_received
		WHEN ca.date_ballot_received IS NULL
			AND ca.date_early_voted IS NOT NULL
			THEN ca.date_early_voted
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NOT NULL
			AND (ca.date_ballot_received::date < ca.date_early_voted::date)
			THEN ca.date_ballot_received
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NOT NULL
			AND (ca.date_ballot_received::date > ca.date_early_voted::date)
			THEN ca.date_early_voted
		WHEN ca.date_ballot_received::date = ca.date_early_voted::date
			AND ca.date_ballot_received IS NOT NULL
			THEN ca.date_ballot_received
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NOT NULL
			AND ca.date_ballot_received = ca.date_early_voted
			THEN ca.date_ballot_received
		ELSE NULL
		END AS date_voted
	, CASE WHEN ca.date_ballot_received IS NULL
			AND ca.date_early_voted IS NULL
			THEN NULL
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NULL
			THEN 'VBM'
		WHEN ca.date_ballot_received IS NULL
			AND ca.date_early_voted IS NOT NULL
			THEN 'Early'
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NOT NULL
			AND (ca.date_ballot_received::date < ca.date_early_voted::date)
			THEN 'VBM'
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NOT NULL
			AND (ca.date_ballot_received::date > ca.date_early_voted::date)
			THEN 'Early' 
		WHEN ca.date_ballot_received IS NOT NULL
			AND ca.date_early_voted IS NOT NULL
			AND ca.date_ballot_received = ca.date_early_voted
			THEN 'Unclear'
		ELSE NULL
		END AS voting_method
	, ca.date_request_received
	, ca.date_ballot_mailed
	, ca.datetime_modified
FROM phoenix_demsdlcc_vansync.contacts_absentees ca
WHERE
	ca.date_ballot_cancelled is null
  AND
	(
		(
			ca.state_code = 'AK' AND (ca.date_ballot_received::date > ('2020-08-19')::date OR ca.date_early_voted::date > ('2020-08-19')::date OR ca.date_request_received::date > ('2020-01-01')::date OR ca.date_ballot_mailed::date > ('2020-08-19')::date)
		)
		OR
		(
			ca.state_code= 'AZ' AND (ca.date_ballot_received::date > ('2020-08-04')::date OR ca.date_early_voted::date > ('2020-08-04')::date OR ca.date_request_received::date > ('2020-08-04')::date OR ca.date_ballot_mailed::date > ('2020-08-04')::date)
		)
		OR
		(
			ca.state_code= 'AR' and (ca.date_ballot_received::date > ('2020-03-15')::date OR ca.date_early_voted::date > ('2020-03-15')::date OR ca.date_request_received::date > ('2020-03-15')::date OR ca.date_ballot_mailed::date > ('2020-03-15')::date)
		)
		OR
		(
		ca.state_code= 'CA' and (ca.date_ballot_received::date > ('2020-03-15')::date OR ca.date_early_voted::date > ('2020-03-15')::date OR ca.date_request_received::date > ('2020-03-15')::date OR ca.date_ballot_mailed::date > ('2020-03-15')::date)
		)
		OR
		(
		ca.state_code= 'CO' and (ca.date_ballot_received::date > ('2020-07-12')::date OR ca.date_early_voted::date > ('2020-07-12')::date OR ca.date_request_received::date > ('2020-07-12')::date OR ca.date_ballot_mailed::date > ('2020-07-12')::date)
		)
		OR
		(
		ca.state_code= 'CT' and (ca.date_ballot_received::date > ('2020-08-20')::date OR ca.date_early_voted::date > ('2020-08-20')::date OR ca.date_request_received::date > ('2020-08-20')::date OR ca.date_ballot_mailed::date > ('2020-08-20')::date)
		)
		OR
		(
		ca.state_code= 'DE' and (ca.date_ballot_received::date > ('2020-09-25')::date OR ca.date_early_voted::date > ('2020-09-25')::date OR ca.date_request_received::date > ('2020-09-25')::date OR ca.date_ballot_mailed::date > ('2020-09-25')::date)
		)
		OR
		(
			ca.state_code= 'FL' and (ca.date_ballot_received::date > ('2020-08-30')::date OR ca.date_early_voted::date > ('2020-08-30')::date OR ca.date_request_received::date > ('2020-08-30')::date OR ca.date_ballot_mailed::date > ('2020-08-30')::date)
		)
		OR
		(
		 ca.state_code= 'GA' and (ca.date_ballot_received::date > ('2020-08-25')::date OR ca.date_early_voted::date > ('2020-08-25')::date OR ca.date_request_received::date > ('2020-08-25')::date OR ca.date_ballot_mailed::date > ('2020-08-25')::date)
		)
		OR
		(
			ca.state_code= 'HI' and (ca.date_ballot_received::date > ('2020-08-15')::date OR ca.date_early_voted::date > ('2020-08-15')::date OR ca.date_request_received::date > ('2020-08-15')::date OR ca.date_ballot_mailed::date > ('2020-08-15')::date)
		)
		OR
		(
		ca.state_code= 'ID' and (ca.date_ballot_received::date > ('2020-06-12')::date OR ca.date_early_voted::date > ('2020-06-12')::date OR ca.date_request_received::date > ('2020-06-12')::date OR ca.date_ballot_mailed::date > ('2020-06-12')::date)
		)
		OR
		( 
			ca.state_code= 'IL' and (ca.date_ballot_received::date > ('2020-03-29')::date OR ca.date_early_voted::date > ('2020-03-29')::date OR ca.date_request_received::date > ('2020-03-29')::date OR ca.date_ballot_mailed::date > ('2020-03-29')::date)
		)
		OR
		(
			ca.state_code= 'IN' and (ca.date_ballot_received::date > ('2020-06-14')::date OR ca.date_early_voted::date > ('2020-06-14')::date OR ca.date_request_received::date > ('2020-06-14')::date OR ca.date_ballot_mailed::date > ('2020-06-14')::date)
		)
		OR
		(
		 	ca.state_code= 'IA' and (ca.date_ballot_received::date > ('2020-06-14')::date OR ca.date_early_voted::date > ('2020-06-14')::date OR ca.date_request_received::date > ('2020-01-01')::date OR ca.date_ballot_mailed::date > ('2020-06-14')::date)
		)
		OR 
		(
			ca.state_code= 'KS' and (ca.date_ballot_received::date > ('2020-08-15')::date OR ca.date_early_voted::date > ('2020-08-15')::date OR ca.date_request_received::date > ('2020-08-15')::date OR ca.date_ballot_mailed::date > ('2020-08-15')::date)
		)
		OR
		(
		 ca.state_code= 'KY' and (ca.date_ballot_received::date > ('2020-07-03')::date OR ca.date_early_voted::date > ('2020-07-03')::date OR ca.date_request_received::date > ('2020-07-03')::date OR ca.date_ballot_mailed::date > ('2020-07-03')::date)
		)
		OR
		(
		ca.state_code= 'LA' and (ca.date_ballot_received::date > ('2020-07-21')::date OR ca.date_early_voted::date > ('2020-07-21')::date OR ca.date_request_received::date > ('2020-07-21')::date OR ca.date_ballot_mailed::date > ('2020-07-21')::date)
		)
		OR
		(
			ca.state_code= 'ME' and (ca.date_ballot_received::date > ('2020-07-24')::date OR ca.date_early_voted::date > ('2020-07-24')::date OR ca.date_request_received::date > ('2020-07-24')::date OR ca.date_ballot_mailed::date > ('2020-07-24')::date)
		)
		OR
		(
			ca.state_code= 'MD' and (ca.date_ballot_received::date > ('2020-06-12')::date OR ca.date_early_voted::date > ('2020-06-12')::date OR ca.date_request_received::date > ('2020-06-12')::date OR ca.date_ballot_mailed::date > ('2020-06-12')::date)
		)
		OR
		(
			ca.state_code= 'MA' and (ca.date_ballot_received::date > ('2020-09-12')::date OR ca.date_early_voted::date > ('2020-09-12')::date OR ca.date_request_received::date > ('2020-09-12')::date OR ca.date_ballot_mailed::date > ('2020-09-12')::date)
		)
		OR
		(
			ca.state_code= 'MI' and (ca.date_ballot_received::date > ('2020-08-04')::date OR ca.date_early_voted::date > ('2020-08-04')::date OR ca.date_request_received::date > ('2020-01-01')::date OR ca.date_ballot_mailed::date > ('2020-08-04')::date)
		)
		Or
		(
			ca.state_code= 'MN' and (ca.date_ballot_received::date > ('2020-08-11')::date OR ca.date_early_voted::date > ('2020-08-11')::date OR ca.date_request_received::date > ('2020-08-11')::date OR ca.date_ballot_mailed::date > ('2020-08-11')::date)
		)
		OR
		(
			ca.state_code= 'MS' and (ca.date_ballot_received::date > ('2020-06-30')::date OR ca.date_early_voted::date > ('2020-06-30')::date OR ca.date_request_received::date > ('2020-06-30')::date OR ca.date_ballot_mailed::date > ('2020-06-30')::date)
		)
		OR
		(
			ca.state_code= 'MO' and (ca.date_ballot_received::date > ('2020-08-15')::date OR ca.date_early_voted::date > ('2020-08-15')::date OR ca.date_request_received::date > ('2020-08-15')::date OR ca.date_ballot_mailed::date > ('2020-08-15')::date)
		)
		OR
		(
			ca.state_code= 'MT' and (ca.date_ballot_received::date > ('2020-06-14')::date OR ca.date_early_voted::date > ('2020-06-14')::date OR ca.date_request_received::date > ('2020-06-14')::date OR ca.date_ballot_mailed::date > ('2020-06-14')::date)
		)
		OR
		(
			ca.state_code= 'NE' and (ca.date_ballot_received::date > ('2020-05-23')::date OR ca.date_early_voted::date > ('2020-05-23')::date OR ca.date_request_received::date > ('2020-05-23')::date OR ca.date_ballot_mailed::date > ('2020-05-23')::date)
		)
		OR
		(
			ca.state_code= 'NV' and (ca.date_ballot_received::date > ('2020-06-22')::date OR ca.date_early_voted::date > ('2020-06-22')::date OR ca.date_request_received::date > ('2020-06-22')::date OR ca.date_ballot_mailed::date > ('2020-06-22')::date)
		)
		OR
		(
			ca.state_code= 'NH' 
      --and (ca.date_ballot_received::date > ('2020-09-19')::date OR ca.date_early_voted::date > ('2020-09-19')::date OR ca.date_request_received::date > ('2020-09-19')::date OR ca.date_ballot_mailed::date > ('2020-09-19')::date)
		)
		OR
		(
			ca.state_code= 'NJ' and (ca.date_ballot_received::date > ('2020-07-19')::date OR ca.date_early_voted::date > ('2020-07-19')::date OR ca.date_request_received::date > ('2020-07-19')::date OR ca.date_ballot_mailed::date > ('2020-07-19')::date)
		)
		OR
		(
			ca.state_code= 'NM' and (ca.date_ballot_received::date > ('2020-06-14')::date OR ca.date_early_voted::date > ('2020-06-14')::date OR ca.date_request_received::date > ('2020-06-14')::date OR ca.date_ballot_mailed::date > ('2020-06-14')::date)
		)
		OR
		(
			ca.state_code= 'NY' and (ca.date_ballot_received::date > ('2020-06-30')::date OR ca.date_early_voted::date > ('2020-06-30')::date OR ca.date_request_received::date > ('2020-06-30')::date OR ca.date_ballot_mailed::date > ('2020-06-30')::date)
		)
		OR
		(
			ca.state_code= 'NC' and (ca.date_ballot_received::date > ('2020-07-05')::date OR ca.date_early_voted::date > ('2020-07-05')::date OR ca.date_request_received::date > ('2020-07-05')::date OR ca.date_ballot_mailed::date > ('2020-07-05')::date)
		)
		OR
		(
			ca.state_code= 'ND' and (ca.date_ballot_received::date > ('2020-06-15')::date OR ca.date_early_voted::date > ('2020-06-15')::date OR ca.date_request_received::date > ('2020-06-15')::date OR ca.date_ballot_mailed::date > ('2020-06-15')::date)
		)
		OR
		(
			ca.state_code= 'OH' and (ca.date_ballot_received::date > ('2020-05-08')::date OR ca.date_early_voted::date > ('2020-05-08')::date OR ca.date_request_received::date > ('2020-05-08')::date OR ca.date_ballot_mailed::date > ('2020-05-08')::date)
		)
		OR
		(
			ca.state_code= 'OK' and (ca.date_ballot_received::date > ('2020-06-30')::date OR ca.date_early_voted::date > ('2020-06-30')::date OR ca.date_request_received::date > ('2020-06-30')::date OR ca.date_ballot_mailed::date > ('2020-06-30')::date)
		)
		OR
		(
			ca.state_code= 'OR' and (ca.date_ballot_received::date > ('2020-05-30')::date OR ca.date_early_voted::date > ('2020-05-30')::date OR ca.date_request_received::date > ('2020-05-30')::date OR ca.date_ballot_mailed::date > ('2020-05-30')::date)
		)
		OR
		(
			ca.state_code= 'PA' and (ca.date_ballot_received::date > ('2020-06-14')::date OR ca.date_early_voted::date > ('2020-06-14')::date OR ca.date_request_received::date > ('2020-01-01')::date OR ca.date_ballot_mailed::date > ('2020-06-14')::date)
		)
		OR
		(
			ca.state_code= 'RI' and (ca.date_ballot_received::date > ('2020-09-19')::date OR ca.date_early_voted::date > ('2020-09-19')::date OR ca.date_request_received::date > ('2020-09-19')::date OR ca.date_ballot_mailed::date > ('2020-09-19')::date)
		)
		OR
		(
			ca.state_code= 'SC' and (ca.date_ballot_received::date > ('2020-06-20')::date OR ca.date_early_voted::date > ('2020-06-20')::date OR ca.date_request_received::date > ('2020-06-20')::date OR ca.date_ballot_mailed::date > ('2020-06-20')::date)
		)
		OR
		(
			ca.state_code= 'SD' and (ca.date_ballot_received::date > ('2020-06-14')::date OR ca.date_early_voted::date > ('2020-06-14')::date OR ca.date_request_received::date > ('2020-06-14')::date OR ca.date_ballot_mailed::date > ('2020-06-14')::date)
		)
		OR
		(
			ca.state_code= 'TN' and (ca.date_ballot_received::date > ('2020-08-18')::date OR ca.date_early_voted::date > ('2020-08-18')::date OR ca.date_request_received::date > ('2020-08-18')::date OR ca.date_ballot_mailed::date > ('2020-08-18')::date)
		)
		OR
		(
			ca.state_code= 'TX' and (ca.date_ballot_received::date > ('2020-07-14')::date OR ca.date_early_voted::date > ('2020-07-14')::date OR ca.date_request_received::date > ('2020-07-14')::date OR ca.date_ballot_mailed::date > ('2020-07-14')::date)
		)
		OR
		(
			ca.state_code= 'UT' and (ca.date_ballot_received::date > ('2020-07-12')::date OR ca.date_early_voted::date > ('2020-07-12')::date OR ca.date_request_received::date > ('2020-07-12')::date OR ca.date_ballot_mailed::date > ('2020-07-12')::date)
		)
		OR
		(
			ca.state_code= 'VT' and (ca.date_ballot_received::date > ('2020-08-23')::date OR ca.date_early_voted::date > ('2020-08-23')::date OR ca.date_request_received::date > ('2020-08-23')::date OR ca.date_ballot_mailed::date > ('2020-08-23')::date)
		)
		OR
		(
			ca.state_code= 'VA' and (ca.date_ballot_received::date > ('2020-07-02')::date OR ca.date_early_voted::date > ('2020-07-02')::date OR ca.date_request_received::date > ('2020-07-02')::date OR ca.date_ballot_mailed::date > ('2020-07-02')::date)
		)
		OR
		(
			ca.state_code= 'WA' and (ca.date_ballot_received::date > ('2020-08-16')::date OR ca.date_early_voted::date > ('2020-08-16')::date OR ca.date_request_received::date > ('2020-08-16')::date OR ca.date_ballot_mailed::date > ('2020-08-16')::date)
		)
		OR
		(
			ca.state_code= 'WV' and (ca.date_ballot_received::date > ('2020-06-22')::date OR ca.date_early_voted::date > ('2020-06-22')::date OR ca.date_request_received::date > ('2020-06-22')::date OR ca.date_ballot_mailed::date > ('2020-06-22')::date)
		)
		OR
		(
			ca.state_code= 'WI' and (ca.date_ballot_received::date > ('2020-08-11')::date OR ca.date_early_voted::date > ('2020-08-11')::date OR ca.date_request_received::date > ('2020-08-11')::date OR ca.date_ballot_mailed::date > ('2020-08-11')::date)
		)
		OR
		(
			ca.state_code= 'WY' and (ca.date_ballot_received::date > ('2020-08-22')::date OR ca.date_early_voted::date > ('2020-08-22')::date OR ca.date_request_received::date > ('2020-08-22')::date OR ca.date_ballot_mailed::date > ('2020-08-22')::date)
		)
)
) a
) b
WHERE b.rank = 1
;



-- NEXT ADD IN ANALYTICS.PERSON DATA -- this script should run once a day
DROP TABLE IF EXISTS jdickinson1.ev_av_2020_step_02;
CREATE TABLE jdickinson1.ev_av_2020_step_02 AS
SELECT
	b.state_code
	, b.myv_van_id
	, d.person_id
	, d.sos_id
	, b.date_voted
	, b.voting_method
	, b.date_request_received
	, b.date_ballot_mailed
	, b.mail_ballot_status
	, d.state_house_district_latest
	, d.state_senate_district_latest
	, d.county_name
	, d.van_precinct_name
	, d.age
	, d.ethnicity
	, d.gender
	, d.party_name_dnc
FROM jdickinson1.ev_av_2020_step_01 b
LEFT JOIN
(
SELECT
	c.state_code
	, c.myv_van_id
	, c.person_id
	, c.sos_id
	, c.state_house_district_latest
	, c.state_senate_district_latest
	, c.county_name
	, c.van_precinct_name
	, c.age_combined AS age
	, CASE
		WHEN c.ethnicity_combined = 'A' THEN 'AAPI'
		WHEN c.ethnicity_combined = 'B' THEN 'Black'
		WHEN c.ethnicity_combined = 'H' THEN 'Latinx'
		WHEN c.ethnicity_combined = 'N' THEN 'Native American'
		WHEN c.ethnicity_combined = 'W' THEN 'White'
		ELSE 'Race Other/Unknown'
		END AS ethnicity
	, c.gender_combined AS gender
	, c.party_name_dnc
FROM phoenix_analytics.person c
) d ON b.state_code || b.myv_van_id = d.state_code || d.myv_van_id
;




--- determine new voters-- this script should run once a week
drop table if exists jdickinson1.ev_av_2020_not_voted;
create table jdickinson1.ev_av_2020_not_voted as
SELECT
	a.state_code
	, a.person_id
FROM phoenix_analytics.person_votes a
WHERE case when
	a.vote_g_2018 =0 and 
	, a.vote_p_2018=0 and 
	, a.vote_g_2017 =0 and 
	,a.vote_g_2016 =0 and
	,a.vote_g_2015 =0 and 
	,a.vote_g_2014 =0 and
	,a.vote_g_2013 =0 and
	,a.vote_g_2012 =0 and
	,a.vote_g_2011 =0 and
	,a.vote_g_2010 =0 and
	,a.vote_g_2009 =0 and
	,a.vote_g_2008 =0 and
	,a.vote_g_2007 =0 and
	,a.vote_g_2006 =0 and
	,a.vote_g_2005 =0 and
	,a.vote_g_2004 =0 and
	,a.vote_g_2003 =0 and
	,a.vote_p_2017 =0 and
	,a.vote_p_2016 =0 and
	,a.vote_p_2015 =0 and
	,a.vote_p_2014 =0 and
	,a.vote_p_2013 =0 and
	,a.vote_p_2012 =0 and
	,a.vote_p_2011 =0 and
	,a.vote_p_2010 =0 and
	,a.vote_p_2009 =0 and
	,a.vote_p_2008 =0 and
	,a.vote_p_2007 =0 and
	,a.vote_p_2006 =0 and
	,a.vote_p_2005 =0 and
	,a.vote_p_2004 =0 and
	,a.vote_p_2003 =0 THEN 0 ELSE 1 END = 0
;





-- NEXT ADD IN SCORES DATA. REMEMBER TO SWITCH OUT THE SCORES TABLE AS THEY UPDATE!!!!
DROP TABLE IF EXISTS jdickinson1.ev_av_2020_step_03;
CREATE TABLE jdickinson1.ev_av_2020_step_03 AS
SELECT
	b.*
	, e.turnout_score
	, e.state_house_support_score
	, e.state_senate_support_score
	, e.zero_to_one_turnout
	, e.zero_to_one_state_house_support_score
	, e.zero_to_one_state_senate_support_score
	,case when f.person_id is not null then 'New Voter' else 'Previous Voter' end as new_voter_status
FROM jdickinson1.ev_av_2020_step_02 b
LEFT JOIN tpietrzyk.scores_reformatted_20201101 e ON b.state_code || b.myv_van_id = e.state_code || e.myv_van_id -- REMEMBER TO SWITCH OUT THIS TABLE AS NEEDED!!!
left join jdickinson1.ev_av_2020_not_voted f on b.state_code || b.person_id = f.state_code || f.person_id
;








-- PLAYING AROUND WITH INITIAL AGGREGATIONS- this script should run every day
DROP TABLE IF EXISTS jdickinson1.ev_av_2020_aggregation_v03;
CREATE TABLE jdickinson1.ev_av_2020_aggregation_v03 AS
SELECT
	ag.*
  ,case when d.district_of_interest = 'x' then 'District of Interest' else 'Remaining Districts' end as district_of_interest
  
  
FROM
(
(
SELECT
	a.state_code
	, 'Lower Chamber' AS chamber
	, a.state_house_district_latest AS district
	,a.county_name
	, CASE WHEN a.state_code IN  ('MI','TX','SC','IN','AL','WI','MN','TN','VA','MS','WA','GA','OH','MO','IL','HI')
	THEN 'Non-Partisan' ELSE 'Partisan' END as partisan_states
	,case when a.state_code in ('NH', 'ME', 'NC', 'PA', 'GA', 'FL', 'MI', 'WI', 'IA', 'MN', 'TX', 'AZ', 'AK', 'MT', 'WV', 'KS') THEN 'Target' else 'Remaining States' 
	end as target_states
	,sum(case when a.new_voter_status='New Voter' and a.date_voted is not null then 1 else 0 end) as first_time_voters
, SUM(CASE WHEN a.date_voted IS NOT NULL THEN 1 ELSE 0 END) AS people_voted
, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.zero_to_one_state_house_support_score IS NOT NULL THEN 1 ELSE 0 END) AS scored_people_voted
	, SUM(CASE WHEN a.date_request_received IS NOT NULL THEN 1 ELSE 0 END) AS ballots_requested
	, SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL THEN 1 ELSE 0 END) AS ballots_mailed
	, SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL AND a.date_voted IS NULL THEN 1 ELSE 0 END) AS ballots_still_out
	, SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL THEN 1 ELSE 0 END) - SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL AND a.date_voted IS NULL THEN 1 ELSE 0 END) AS mail_ballots_returned_or_voted_in_person
	, ROUND(SUM(a.zero_to_one_state_house_support_score * (CASE WHEN a.date_voted IS NULL OR a.zero_to_one_state_house_support_score IS NULL THEN 0 ELSE 1 END)::float), 0) AS projected_dem_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc = 'Democratic' THEN 1 ELSE 0 END) AS reg_dem_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc = 'Republican' THEN 1 ELSE 0 END) AS reg_repub_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc NOT IN ('Democratic', 'Republican') AND a.party_name_dnc IS NOT NULL THEN 1 ELSE 0 END) AS reg_ind_or_third_party_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc IS NULL THEN 1 ELSE 0 END) AS no_party_reg_votes
	, SUM(CASE WHEN a.date_request_received IS NOT NULL AND a.party_name_dnc = 'Democratic' THEN 1 ELSE 0 END) AS dem_ballot_requests
	, SUM(CASE WHEN a.date_request_received IS NOT NULL AND a.party_name_dnc = 'Republican' THEN 1 ELSE 0 END) AS repub_ballot_requests
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'AAPI' THEN 1 ELSE 0 END) AS aapi_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Black' THEN 1 ELSE 0 END) AS black_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Latinx' THEN 1 ELSE 0 END) AS latinx_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Native American' THEN 1 ELSE 0 END) AS native_american_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'White' THEN 1 ELSE 0 END) AS white_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Other Race' THEN 1 ELSE 0 END) AS other_race_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Race Unknown' THEN 1 ELSE 0 END) AS race_unknown_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 18 AND 24 THEN 1 ELSE 0 END) AS age_18_to_24_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 25 AND 34 THEN 1 ELSE 0 END) AS age_25_to_34_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 35 AND 49 THEN 1 ELSE 0 END) AS age_35_to_49_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 50 AND 64 THEN 1 ELSE 0 END) AS age_50_to_64_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age >= 65 THEN 1 ELSE 0 END) AS age_65_plus_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND (a.age <= 17 OR a.age IS NULL) THEN 1 ELSE 0 END) AS age_unknown_voted
	, b.total_voters
	, CASE WHEN a.state_code IN ('AK','AR','AZ','CA','CO','CT','DC','DE','FL','IA','ID','KS','KY','LA','MA','MD','ME','MT','NC','ND','NE'
,'NH','NJ','NM','NV','NY','OK','OR','PA','RI','SD','UT','VT','WV','WY') THEN b.reg_dems ELSE NULL end AS reg_dems
	, CASE WHEN a.state_code IN ('AK','AR','AZ','CA','CO','CT','DC','DE','FL','IA','ID','KS','KY','LA','MA','MD','ME','MT','NC','ND','NE'
,'NH','NJ','NM','NV','NY','OK','OR','PA','RI','SD','UT','VT','WV','WY') THEN b.reg_repubs ELSE NULL end AS reg_repubs
	,b.race_registered_white
	,b.race_registered_non_white
	,g.projected_turnout
	,SUM(CASE WHEN a.date_ballot_mailed is null AND a.date_voted is null AND a.date_request_received IS NOT NULL THEN 1 ElSE 0 END) AS requests_outstanding
	,SUM(CASE WHEN a.date_ballot_mailed is not null and a.date_voted is null THEN 1 ELSE 0 END) AS ballots_outstanding
	, ROUND(SUM(a.zero_to_one_state_house_support_score * (CASE WHEN a.zero_to_one_state_house_support_score is not null AND a.date_ballot_mailed is not null and a.date_voted is null THEN 1 ELSE 0 END)::float), 0) AS outstanding_projected_dem_votes
	,SUM(CASE WHEN a.zero_to_one_state_house_support_score is not null AND a.date_ballot_mailed is not null and a.date_voted is null THEN 1 ELSE 0 END) AS scored_outstanding_votes
FROM jdickinson1.ev_av_2020_step_03 a
left join 
jdickinson1.ev_crosswalk e on e.state_code || e.state_house_district_latest = a.state_code || a.state_house_district_latest AND e.chamber = 'state_house'
 left JOIN 
 tpietrzyk.score_based_turnout_projections_20200923 g ON e.state_code ||e.state_house_district_civis= g.state_code || g.state_house_district_civis AND g.chamber = 'state_house'

LEFT JOIN
(
SELECT
	ap.state_code
	, ap.state_house_district_latest AS district
	,ap.county_name
	, COUNT(DISTINCT ap.person_id) AS total_voters
	, SUM(CASE WHEN ap.party_name_dnc = 'Democratic' THEN 1 ELSE 0 END) AS reg_dems
	, SUM(CASE WHEN ap.party_name_dnc = 'Republican' THEN 1 ELSE 0 END) AS reg_repubs
		,SUM(CASE WHEN ap.ethnicity_combined = 'W' THEN 1 ELSE 0 END) AS race_registered_white
,SUM(CASE WHEN ap.ethnicity_combined IS NULL OR ap.ethnicity_combined != 'W' THEN 1 ELSE 0 END) AS race_registered_non_white
FROM phoenix_analytics.person ap
WHERE ap.state_house_district_latest IS NOT NULL
	AND ap.state_senate_district_latest IS NOT NULL
	AND ap.state_code IN ('AK','AR','AZ','CA','CO','CT','DC','DE','FL','IA','ID','KS','KY','LA','MA','MD','ME','MI','MT','NC','ND','NE','NH','NJ','NM','NV','NY','OK','OR','PA','RI','SD','UT','VT','WV','WY')

	AND ap.reg_voter_flag = TRUE
	AND ap.reg_record_merged = FALSE
	AND ap.is_deceased = FALSE
	AND ap.out_of_state_ncoa = FALSE
GROUP BY 1, 2, 3
ORDER BY 1, 2, 3
) b ON a.state_code || a.state_house_district_latest || a.county_name = b.state_code || b.district || b.county_name
WHERE a.state_house_district_latest IS NOT NULL
GROUP BY 1, 2, 3, 4 ,5,6, b.total_voters, b.reg_dems, b.reg_repubs,b.race_registered_white,b.race_registered_non_white, g.projected_turnout
ORDER BY 1, 2, 3, 4, 5
)
UNION ALL
(
SELECT
	a.state_code
	, 'Upper Chamber' AS chamber
	, a.state_senate_district_latest AS district
	,a.county_name
	, CASE WHEN a.state_code IN  ('MI','TX','SC','IN','AL','WI','MN','TN','VA','MS','WA','GA','OH','MO','IL','HI')
	THEN 'Non-Partisan' ELSE 'Partisan' END as partisan_states
	,case when a.state_code in ('NH', 'ME', 'NC', 'PA', 'GA', 'FL', 'MI', 'WI', 'IA', 'MN', 'TX', 'AZ', 'AK', 'MT', 'WV', 'KS') THEN 'Target' else 'Remaining States' 
	end as target_states
	,sum(case when a.new_voter_status='New Voter' and a.date_voted is not null then 1 else 0 end) as first_time_voters
, SUM(CASE WHEN a.date_voted IS NOT NULL THEN 1 ELSE 0 END) AS people_voted
, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.zero_to_one_state_senate_support_score IS NOT NULL THEN 1 ELSE 0 END) AS scored_people_voted
	, SUM(CASE WHEN a.date_request_received IS NOT NULL THEN 1 ELSE 0 END) AS ballots_requested
	, SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL THEN 1 ELSE 0 END) AS ballots_mailed
	, SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL AND a.date_voted IS NULL THEN 1 ELSE 0 END) AS ballots_still_out
	, SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL THEN 1 ELSE 0 END) - SUM(CASE WHEN a.date_ballot_mailed IS NOT NULL AND a.date_voted IS NULL THEN 1 ELSE 0 END) AS mail_ballots_returned_or_voted_in_person
	, ROUND(SUM(a.zero_to_one_state_senate_support_score * (CASE WHEN a.date_voted IS NULL OR a.zero_to_one_state_senate_support_score IS NULL THEN 0 ELSE 1 END)::float), 0) AS projected_dem_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc = 'Democratic' THEN 1 ELSE 0 END) AS reg_dem_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc = 'Republican' THEN 1 ELSE 0 END) AS reg_repub_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc NOT IN ('Democratic', 'Republican') AND a.party_name_dnc IS NOT NULL THEN 1 ELSE 0 END) AS reg_ind_or_third_party_votes
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.party_name_dnc IS NULL THEN 1 ELSE 0 END) AS no_party_reg_votes
	, SUM(CASE WHEN a.date_request_received IS NOT NULL AND a.party_name_dnc = 'Democratic' THEN 1 ELSE 0 END) AS dem_ballot_requests
	, SUM(CASE WHEN a.date_request_received IS NOT NULL AND a.party_name_dnc = 'Republican' THEN 1 ELSE 0 END) AS repub_ballot_requests
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'AAPI' THEN 1 ELSE 0 END) AS aapi_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Black' THEN 1 ELSE 0 END) AS black_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Latinx' THEN 1 ELSE 0 END) AS latinx_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Native American' THEN 1 ELSE 0 END) AS native_american_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'White' THEN 1 ELSE 0 END) AS white_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Other Race' THEN 1 ELSE 0 END) AS other_race_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.ethnicity = 'Race Unknown' THEN 1 ELSE 0 END) AS race_unknown_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 18 AND 24 THEN 1 ELSE 0 END) AS age_18_to_24_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 25 AND 34 THEN 1 ELSE 0 END) AS age_25_to_34_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 35 AND 49 THEN 1 ELSE 0 END) AS age_35_to_49_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age BETWEEN 50 AND 64 THEN 1 ELSE 0 END) AS age_50_to_64_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND a.age >= 65 THEN 1 ELSE 0 END) AS age_65_plus_voted
	, SUM(CASE WHEN a.date_voted IS NOT NULL AND (a.age <= 17 OR a.age IS NULL) THEN 1 ELSE 0 END) AS age_unknown_voted
	, b.total_voters
	, CASE WHEN a.state_code IN ('AK','AR','AZ','CA','CO','CT','DC','DE','FL','IA','ID','KS','KY','LA','MA','MD','ME','MT','NC','ND','NE'
,'NH','NJ','NM','NV','NY','OK','OR','PA','RI','SD','UT','VT','WV','WY') THEN b.reg_dems ELSE NULL end AS reg_dems
	, CASE WHEN a.state_code IN ('AK','AR','AZ','CA','CO','CT','DC','DE','FL','IA','ID','KS','KY','LA','MA','MD','ME','MT','NC','ND','NE'
,'NH','NJ','NM','NV','NY','OK','OR','PA','RI','SD','UT','VT','WV','WY') THEN b.reg_repubs ELSE NULL end AS reg_repubs
,b.race_registered_white
,b.race_registered_non_white
	,g.projected_turnout
	,SUM(CASE WHEN a.date_ballot_mailed is null AND a.date_voted is null AND a.date_request_received IS NOT NULL THEN 1 ElSE 0 END) AS requests_outstanding
	,SUM(CASE WHEN a.date_ballot_mailed is not null and a.date_voted is null THEN 1 ELSE 0 END) AS ballots_outstanding
	, ROUND(SUM(a.zero_to_one_state_senate_support_score * (CASE WHEN a.zero_to_one_state_senate_support_score is not null AND a.date_ballot_mailed is not null and a.date_voted is null THEN 1 ELSE 0 END)::float), 0) AS outstanding_projected_dem_votes
	,SUM(CASE WHEN a.zero_to_one_state_senate_support_score is not null AND a.date_ballot_mailed is not null and a.date_voted is null THEN 1 ELSE 0 END) AS scored_outstanding_votes
FROM jdickinson1.ev_av_2020_step_03 a
left join 
jdickinson1.ev_crosswalk e on e.state_code || e.state_house_district_latest = a.state_code || a.state_senate_district_latest AND e.chamber = 'state_senate' -- WE FORGOT TO RENAME THE DISTRICT FIELD IN THIS TABLE, SO THAT'S WHY IT SAYS HOUSE HERE.
 left JOIN 
 tpietrzyk.score_based_turnout_projections_20200923 g ON e.state_code ||e.state_house_district_civis= g.state_code || g.state_house_district_civis AND g.chamber = 'state_senate' -- SAME ISSUE HERE WITH FORGETTING TO RENAME THE ISTRICT FIELD.

LEFT JOIN
(
SELECT
	ap.state_code
	, ap.state_senate_district_latest AS district
	,ap.county_name
	, COUNT(DISTINCT ap.person_id) AS total_voters
	, SUM(CASE WHEN ap.party_name_dnc = 'Democratic' THEN 1 ELSE 0 END) AS reg_dems
	, SUM(CASE WHEN ap.party_name_dnc = 'Republican' THEN 1 ELSE 0 END) AS reg_repubs
	,SUM(CASE WHEN ap.ethnicity_combined = 'W' THEN 1 ELSE 0 END) AS race_registered_white
,SUM(CASE WHEN ap.ethnicity_combined IS NULL OR ap.ethnicity_combined != 'W' THEN 1 ELSE 0 END) AS race_registered_non_white
FROM phoenix_analytics.person ap
WHERE ap.state_house_district_latest IS NOT NULL
	AND ap.state_senate_district_latest IS NOT NULL
	AND ap.state_code IN ('AK','AR','AZ','CA','CO','CT','DC','DE','FL','IA','ID','KS','KY','LA','MA','MD','MI','ME','MT','NC','ND','NE','NH','NJ','NM','NV','NY','OK','OR','PA','RI','SD','UT','VT','WV','WY')
	AND ap.reg_voter_flag = TRUE
	AND ap.reg_record_merged = FALSE
	AND ap.is_deceased = FALSE
	AND ap.out_of_state_ncoa = FALSE
GROUP BY 1, 2, 3
ORDER BY 1, 2, 3
) b ON a.state_code || a.state_senate_district_latest || a.county_name = b.state_code || b.district || b.county_name
WHERE a.state_senate_district_latest IS NOT NULL
GROUP BY 1, 2, 3, 4 ,5,6, b.total_voters, b.reg_dems, b.reg_repubs,b.race_registered_white,b.race_registered_non_white, g.projected_turnout
ORDER BY 1, 2, 3, 4, 5
)
)ag 
join jdickinson1.ev_av_2020_dicstricts_of_interest d
on ag.state_code||ag.chamber||ag.district = d.state_code||d.chamber||d.ap_district
where ag.state_code not in ('AL','LA','VA','MD','MS','NJ') and (ag.state_code||ag.chamber NOT IN ('NH'||'Lower Chamber', 'MI'||'Upper Chamber'));



--export statement, should run every day

SELECT *
FROM jdickinson1.ev_av_2020_aggregation_v03;









--These are all incorporated




-- create a filter of targeted and non targeted states and partisian and non-partisan states
, CASE WHEN a.state_house_district_latest IN ('AZ', 'GA', ...) THEN 'Target' ELSE 'Non-Target' END AS target_or_not
, CASE WHEN a.state_code IN  (whatever states Anthony said)  THEN 'Partisan' ELSE 'Non-Partisan' END as Partisan_states
FROM tpietrzyk.ev_av_2020_step_03 a






--- determine new voters
drop table if exists tpietrzyk.ev_av_2020_not_voted;
create table tpietrzyk.ev_av_2020_not_voted as
SELECT
	a.state_code
	, a.person_id
FROM phoenix_analytics.person_votes a
WHERE SUM(a.vote_g_2018, a.vote_p_2018, a.vote_g_2017,a.vote_g_2016,a.vote_g_2015,a.vote_g_2014,a.vote_g_2013,a.vote_g_2012,a.vote_g_2011
,a.vote_g_2010,a.vote_g_2009,a.vote_g_2008,a.vote_g_2007,vote_g_2006,vote_g_2005,vote_g_2004,vote_g_2003, a.vote_p_2017,a.vote_p_2016,a.vote_p_2015,
a.vote_p_2014,a.vote_p_2013,a.vote_p_2012,a.vote_p_2011,a.vote_p_2010,a.vote_p_2009,a.vote_p_2008,a.vote_p_2007,vote_p_2006,vote_p_2005,vote_p_2004,vote_p_2003) = 0
)
;

--- set this to run on sunday mornings as a script

SELECT
a.state_code
, a.district
, a.chamber
, SUM(CASE WHEN a.date_voted IS NOT NULL AND b.person_id IS NOT NULL THEN 1 ELSE 0 END) AS new_voters
FROM tpietrzyk.ev_av_2020_step_03 a
LEFT JOIN tpietrzyk.ev_av_2020_not_voted b ON a.state_code || a.person_id = b.state_code || b.person_id
;

--run this as an export on monday mornings
